QUIZZ PYTHON

1) pr importer une variable d'environnement :

REP :
import os
...
os.getenv('NOM_VAR_DENVIRONNEMENT')

2) pr faire un request.patch en test :

REP : préciser en attribut "json = l'objet à passer dans le 
      patch"


3) pour tester les endpoints d'une API:

REP:
use la librairie requests et faire un requests.get() en
précisant le endpoint used et le headers
ex : response = requests.get(
		'http...', headers = {'Host': 'localhost'}
		)

ensuite on fait des "assert" pour vérifier
ex : assert response.status_code == 200
     et si le assert est pas bon, we get 1 AssertionError

on peut aussi préciser un message d'erreur if le Assert est
pas vérifié
ex : assert lenCommuneDB == lenCommuneAPI, "Erreur, veuillez
     relancer le test"

3bis) pr faire un PATCH avec requests

REP:
fo préciser un URL + un HEADERS + un JSON et non un DATA car
les data qu'on envoie doivent être au format JSON
ex: requests.patch(
	host + port + url,
	headers={'Authorization':jeton, 'Host':'localhost', 
		 'Content-Type':'application/json'},
	json=mon_payload)

4) pr use la libraire JSON et print un pure JSON

REP:
elle est déjà dans python pour les récentes version MS fo
qd mm l'import dans le code
ensuite fo print un json.loads(response.content)

5) pr créer une connexion avec 1 DB PGSQL et run SQL queries

REP:
from SQLAlchemy import create_engine
engine = create_engine(
	'postgresql://db_user:mdp@db_host:db_port/db_name'
	)
puis entrer sa requête SQL:
myQuery=pd.read_sql_query('''
		SELECT *
		FROM data.ny_boroughs
		LIMIT 2''', engine)

et si on veut transformer la rép SQL en JSON:
myQuery.to_json(orient='index')
==> très important de connaître les diverses valeurs de
"orient" => index permet de les lister ligne par ligne

et si on veut compter le nombre d'items dans le JSON :
len(myQuery.to_json(orient='index'))

can associer conditions avec les asserts grâce au
try...
except...

penser à add un max de print pour guider le user des tests
et le sys.exit() si il faut interrompre le test

6) comment quitter un virtual environment

REP:
entrer "deactivate"

7) how récup la valeur d'un input()

REP:
myVariable = input()

8) to hide the tracebacks error response ds la console

REP:
import sys
sys.tracebacklimit=0
/!\ MS ds ce cas pensez à tjrs add ses own error messages