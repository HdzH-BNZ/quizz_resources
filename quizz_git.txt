			QUIZZ GIT
- si les branches de dev sont déjà créées, tjrs begin avec un
  git pull pr reload les modif sur le dépôt distant

1) pour créer une nouvelle branche à partir d'une branche
existante

REP :
git checkout -b new_branch former_branch
git status
git add .
git commit -m "nom_commit"
git log
git push -u remote new_branch

2) pr changer de branche

REP :
git checkout branche2

2b) pr changer de branche dispo en remote MS absente en local :

REP:
git checkout branche_remote

3) créer une branche "develop" en local puis en remote à partir
de la branche master

REP :
git checkout -b develop master 
git add .
git commit -m blabla
git push -u origin develop => ça crée automatiquement 1 branche
				develop en remote

4) récup les modif de la branche remote dans celle en local

git checkout branche_en_question
git pull

5) pr suppr la branche sur laquelle on a dev 1 feature

REP :
git checkout autre_branche_à_pas_suppr
git branch -d my_feature


6) pr comparer 2 branches entre elles

REP:
git diff branch1..branch2

7) sur Gitlab pr faire une MR (merge request)

REP :
pousser la new branche sur le repo distant
cliquer sur l'onglet "branch" colonne gauche
cliquer sur le bouton "merge request" de la branche ajoutée
ajouter une description
assigner un auteur de cette MR (moi)
assigner qqun à la relecture (reviewer)
cocher "delete source branch..."
cliquer sur "create merge request"
et là faut attendre que ce soit Approve + Merge par le reviewer

7bis) sur Github pr faire une PR (pull request <=> gitlab's MR)

REP:
pousser la new branche sur le repo distant
cliquer sur la liste des branches sur Github
cliquer sur "new pull request" sur la new branche poussée
select la base (branche qui va recevoir le merge)
ajouter une description
cliquer sur "create pull request"
vérifier que la branche "has no conflicts with the base branch"
cliquer sur "merge pull request" 
cliquer sur "confirm merge"
cliquer sur "delete branch"


8) sur les anciennes versions de Git : suppr un dossier en local
et push la suppr sur le git distant

REP :
faire un git add nom_du_dossier_où_ya_la_suppression
puis un git add -A (sinon il save pas les paths supprimés)
et commiter ensuite comme d'habitude

9) pr reload un dossier qu'on vient de suppr en local MS tjrs
dispo en remote :

REP:
git fetch
git checkout HEADER path/to/your/dir/or/file
avec path =! dossier où ya le git local

10) pr revert une Merged Request sur Gitlab :

REP :
Settings > General > Merge requests => choose la last MR et
cliquer sur le btn REVERT


11) pr faire un git revert ( /!\ c super compliqué de revenir en 
arrière ensuite)

REP:
- git log => to recup le last commit_id
- git revert commit_id
- leave le git revert en tapant ":wq"

12) pr faire un git revert sur remote repo qu'on vient de cloner:
/!\ ya plein de soucis de merge_conflits

REP:
- git clone url.git
- sur la page du repo cloné, cliquer sur "commit" avc l'horloge
- select un commit en cliquant sur l'onglet pile to recup son id
- git revert -m 1 id_commit

13) pr visualiser les diff entre nos actuelles modifs et le last
commit

REP:
git diff chemin_menant_fichier_où_ya_modif
=> les lignes où changement sont indiquées

14) pr forcer le switch de branche mm si on a pas add/commit
sur la branche actuelle

REP:
git stash

15) pr check le repo distant

REP:
git remote -v